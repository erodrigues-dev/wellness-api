name: Staging pipeline

on:
  workflow_dispatch:

env:
  SERVER: ${{ secrets.STG_SERVER_HOST }}
  USER: ${{ secrets.STG_SERVER_USER }}

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        run: docker build -t wellness/api .
      - name: Export docker image
        run: docker save wellness/api | gzip > wellness_api.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: wellness_api_image
          path: wellness_api.tar.gz
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wellness_api_image
      - uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-host: ${{ secrets.STG_SERVER_HOST }}
      - name: Copy image to server
        run: |
          ls -la
          scp wellness_api.tar.gz $USER@$SERVER:/www/wellness/api
      - name: Load docker image in server
        run: >
          ssh $USER@$SERVER -t "
          cd /www/wellness/api;
          docker load -i wellness_api.tar.gz;"
      - name: Start docker container
        run: >
          ssh $USER@$SERVER -t "
          cd /www/wellness/api;
          docker stop wellness_api;
          docker rm wellness_api;
          docker run -dit
          -v /www/wellness/api/.env:/usr/app/.env
          -v /www/wellness/api/google-cloud-key.json:/usr/app/google-cloud-key.json
          -p 3333:3333
          --restart unless-stopped
          --name wellness_api
          wellness/api"
