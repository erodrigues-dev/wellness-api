openapi: 3.0.1
info:
  title: Elite Wellness
  version: 0.0.2
  description: Admin API documentation

servers:
  - url: http://localhost:3333/admin
    description: Local API
  - url: http://stg.api.elitewellnessperformance.com:8090/admin
    description: Staging API

security:
  - token: []

paths:
  /scheduler/calendars:
    get:
      tags:
        - scheduler
      summary: list calendars
      responses:
        200:
          description: list of calendars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'

  /scheduler/calendars/:id/activities:
    get:
      tags:
        - scheduler
      summary: list activities associateds in calendar
      parameters:
        - in: path
          name: id
          required: true
          description: calendar id
          schema:
            type: string
      responses:
        200:
          description: list of calendars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'

  /scheduler/items:
    get:
      tags:
        - scheduler
      summary: List scheduler items
      parameters:
        - in: query
          name: calendars
          required: true
          description: list of calendar ids
          schema:
            type: array
            items:
              type: string
        - in: query
          name: date
          required: true
          description: date format ISO8601
          schema:
            type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Appointment'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'

  /scheduler/appointments:
    post:
      tags:
        - scheduler
      summary: Create appointment
      requestBody:
        description: >
          Ao informar o campo `calendarClassId` os campos
          `calendarId` e `activityId` serão automaticamente carregados da classe
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointment'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'

        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'

  /scheduler/appointments/{id}:
    put:
      tags:
        - scheduler
      summary: Update appointment
      parameters:
        - $ref: '#components/parameters/pathId'
      requestBody:
        description: >
          Ao informar o campo `calendarClassId` os campos
          `calendarId` e `activityId` serão automaticamente carregados da classe
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointment'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'

        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'

  /scheduler/appointments/{id}/cancel:
    post:
      tags:
        - scheduler
      summary: Cancel appointment
      parameters:
        - $ref: '#components/parameters/pathId'
      responses:
        204:
          description: Not Content
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'

  /scheduler/classes:
    post:
      tags:
        - scheduler
      summary: Create a class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCalendarClass'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarClass'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'

  /scheduler/classes/{id}:
    put:
      tags:
        - scheduler
      summary: Update a class
      parameters:
        - $ref: '#components/parameters/pathId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCalendarClass'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarClass'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'
    delete:
      tags:
        - scheduler
      summary: Delete a class
      parameters:
        - $ref: '#components/parameters/pathId'
      responses:
        204:
          description: Ok
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/InternalError'

components:
  # ---- security schemas
  securitySchemes:
    'token':
      type: http
      scheme: bearer
      bearerFormat: JWT

  # ---- parameters
  parameters:
    pathId:
      in: path
      name: id
      required: true
      schema:
        type: string

  # ---- responses
  responses:
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

  # ---- schemas
  schemas:
    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: Field name is required

    Error:
      type: object
      properties:
        message:
          type: string
          example: unexpected error

    IdAndName:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    IdIntegerAndName:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Activity:
      type: object
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: Adult Training
        duration:
          type: integer
          example: 30

    Calendar:
      type: object
      properties:
        id:
          type: string
          example: 3500f32f-3e4a-4a42-88a4-31ad2c83bb09
        name:
          type: string
          example: Anthony
        minHoursToSchedule:
          type: number
          example: 12
        minHoursToCancel:
          type: number
          example: 12
        maxDaysInFuture:
          type: number
          example: 365
        maxEntryPerSlot:
          type: number
          example: 1
        createdAt:
          type: string
          example: 2022-02-10T23:40:36.370Z
        updatedAt:
          type: string
          example: 2022-02-10T23:40:36.370Z
        category:
          type: object
          properties:
            id:
              type: number
              example: 6
            name:
              type: string
              example: Categoria 1

    CalendarSimpleObj:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
        id: 3500f32f-3e4a-4a42-88a4-31ad2c83bb09
        name: Anthony

    CreateAppointment:
      type: object
      properties:
        calendarClassId:
          type: string
        calendarId:
          type: string
        activityId:
          type: integer
        dateStart:
          type: string
        customerId:
          type: integer
        calendarLabelId:
          type: string
        notes:
          type: string

    RequestCalendarClass:
      type: object
      properties:
        calendarId:
          type: string
        activityId:
          type: integer
        dateStart:
          type: string
        slots:
          type: integer
        recurrenceRule:
          type: string
        recurrenceExceptions:
          type: string
        color:
          type: string
        notes:
          type: string

    CalendarClass:
      type: object
      properties:
        id:
          type: string
        calendarId:
          type: string
        calendar:
          $ref: '#/components/schemas/CalendarSimpleObj'
        activityId:
          type: integer
        activity:
          $ref: '#components/schemas/Activity'
        dateStart:
          type: string
        slots:
          type: integer
        recurrenceRule:
          type: string
        recurrenceExceptions:
          type: string
        color:
          type: string
        notes:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string

    Appointment:
      type: object
      properties:
        id:
          type: string
        dateStart:
          type: string
        dateEnd:
          type: string
        calendarId:
          type: string
        calendarLabelId:
          type: string
        calendarClassId:
          type: string
        activity:
          $ref: '#components/schemas/Activity'
        customer:
          $ref: '#/components/schemas/IdIntegerAndName'
        calendarLabel:
          allOf:
            - $ref: '#/components/schemas/IdAndName'
            - type: object
              properties:
                color:
                  type: string
        notes:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        canceledAt:
          type: string
